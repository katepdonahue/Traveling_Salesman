<%= render 'map' %>
<div>
  <%= nested_form_for @trip do |f| %>
    <%= f.fields_for :waypoints do |waypoint_form| %>
      <%= waypoint_form.hidden_field :name, :value => "Start" %>
      <%= waypoint_form.text_field :address, :class => "waypoints", :onchange => "addMarker($(this).val());", :placeholder => "Start"%>
    <% end %>
    <%= f.fields_for :waypoints do |waypoint_form| %>
      <%= waypoint_form.hidden_field :name, :value => "End" %>
      <%= waypoint_form.text_field :address, :class => "waypoints", :onchange => "addMarker($(this).val());", :placeholder => "End" %>
    <% end %>
    <%= f.fields_for :waypoints do |waypoint_form| %>
      <%= waypoint_form.text_field :address, :class => "waypoints", :onchange => "addMarker($(this).val());" %>
        <%= waypoint_form.link_to_remove "-" %>
    <% end %>
    <%= f.link_to_add "+", :waypoints %>
    <br>
    <%= f.submit %>
  <% end %>
</div>
<script type="text/javascript">
  var i = 1;
  var iPrev = 0;
  var tripId;
  var index = 0;
  var cache = new Object();
  var cacheArray = new Array();
  var ajaxHash = new Object();
  function cleanData(funkyHash) {
    jQuery.each(funkyHash, function(localTripId, tripHash) {
      tripId = localTripId;
      jQuery.each(tripHash, function(routeId, routeHash) {
        jQuery.each(routeHash, function(subRouteId, subRouteHash) {
          subRouteHash["transitOptions"]["departureTime"] = new Date(Date.now());
          subRouteHash["travelMode"] = google.maps.TravelMode.TRANSIT;
          cacheArray.push(subRouteHash);
        });
      });
    });
    return funkyHash;
  }

  function cacheResponses(data, callback){
    var cacheIndex = 0;
    jQuery.each(data, function(localTripId, tripHash){
      jQuery.each(tripHash, function(routeId, routeHash){
        cache[routeId] = new Object();
        jQuery.each(routeHash, function(subRouteId, subRouteHash){
          if (iPrev != 0){
            iPrev++;
          }
          sendRequest(routeId, subRouteId, tryAgain,cacheIndex);
          cacheIndex++;
          console.log("sentRequest");
        });
      });
    });
    setTimeout(function(){
      callback(postResponses);
      setTimeout(function(){
        $.each($("#directions-panel").children(), function(i, div){
        $(div).prepend("<h1>Step " + (i+1) + "</h1>");
      });

      }, 500);

    }, 32000);
  }

  var tryAgain = function (routeId, subRouteId, results,cacheIndex) {
    console.log("tryAgain");
    if (results == "OVER_QUERY_LIMIT"){
      setTimeout(function(){
        i++;
        console.log("retrying: "+ results);
        sendRequest(routeId, subRouteId, tryAgain,cacheIndex);
      }, 2000);
    }
    else {
      console.log("I got a response!");
      cache[routeId][subRouteId] = results;
      i++;
    }


  }

  function sendRequest(routeId, subRouteId, callback,cacheIndex) {
    console.log("in send request");
    if (i !== iPrev){
      console.log("iprev is good");
      if (iPrev == 0) {
        iPrev++;
      }
      iPrev++;
      directionsService.route(cacheArray[cacheIndex], function(response, status) {
        if (status == google.maps.DirectionsStatus.OK) {
          callback(routeId, subRouteId, response,cacheIndex);
        } 
        else if (status == "OVER_QUERY_LIMIT") {
          console.log(status + "calling tryAgain");
          callback(routeId, subRouteId, status,cacheIndex);
        }
        else {
          throw new Error(status);
        }
      });
    }
  }

  function getAjaxHash(callback) {
    ajaxHash[tripId] = new Object(); 
    jQuery.each(cache, function(routeId, routeHash) {
      ajaxHash[tripId][routeId] = new Object();
      jQuery.each(routeHash, function(subRouteId, subRouteHash) {
        ajaxHash[tripId][routeId][subRouteId] = cache[routeId][subRouteId]["routes"][0]["legs"][0]["duration"]["text"];
      });
    });
    callback();
  }

  function postResponses() {
    var directionsDisplay = [];
    $.post("/trips/ajax", ajaxHash, function(bestRouteId, status){
      $("#directions-panel").show();
      $.each(cache[bestRouteId], function(subRouteId, googleResponse){
        directionsDisplay[index] = new google.maps.DirectionsRenderer();
        directionsDisplay[index].setMap(map);
        directionsDisplay[index].setDirections(googleResponse);
        directionsDisplay[index].setPanel(document.getElementById('directions-panel')); 
        index++;
      });
      $("#overlay").addClass("hidden");
      $("#modal").addClass("hidden");
    });
  }

  $(document).ready(function(){
    $("#directions-panel").hide();
    $("input[type=submit]").on("click", function(e){
      e.preventDefault();
      $("#overlay").removeClass("hidden");
      $("#modal").removeClass("hidden");
      var data = $(".new_trip").serialize();
      $.post("/trips", data, function(response, status){
        cacheResponses(cleanData(response), getAjaxHash);
      });
    });
  });
</script>
